// Code generated by hertz generator.

package message

import (
	"context"

	message "tiktok_demo/biz/model/social/message"
	message_service "tiktok_demo/biz/service/social/message"
	"tiktok_demo/pkg/utils"

	"github.com/cloudwego/hertz/pkg/app"
	"github.com/cloudwego/hertz/pkg/protocol/consts"
)

// MessageChat .
// @router /douyin/message/chat/ [GET]
func MessageChat(ctx context.Context, c *app.RequestContext) {
	var err error
	var req message.MessageChatRequest
	err = c.BindAndValidate(&req)
	if err != nil {
        resp := utils.BuildBaseResp(err)
        c.JSON(consts.StatusOK, message.MessageChatResponse{
            StatusCode: resp.StatusCode,
            StatusMsg: resp.StatusMsg,
            MessageList: []*message.Message{},
        })
		return
	}

    messages, err := message_service.NewMessageService(ctx, c).GetMessageChat(&req)
    resp := utils.BuildBaseResp(err)
	c.JSON(consts.StatusOK, message.MessageChatResponse{
        StatusCode: resp.StatusCode,
        StatusMsg: resp.StatusMsg,
        MessageList: messages,
    })
}

// MessageAction .
// @router /douyin/message/action/ [POST]
func MessageAction(ctx context.Context, c *app.RequestContext) {
	var err error
	var req message.MessageActionRequest
	err = c.BindAndValidate(&req)
	if err != nil {
        resp := utils.BuildBaseResp(err)
        c.JSON(consts.StatusOK, message.MessageActionResponse{
            StatusCode: resp.StatusCode,
            StatusMsg: resp.StatusMsg,
        })
		return
	}

    err = message_service.NewMessageService(ctx, c).MessageAction(&req)
    resp := utils.BuildBaseResp(err)
    c.JSON(consts.StatusOK, message.MessageActionResponse{
        StatusCode: resp.StatusCode,
        StatusMsg: resp.StatusMsg,
    })
}
